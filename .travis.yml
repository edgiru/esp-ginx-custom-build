sudo: false
language: cpp
addons:
  apt:
    packages:
    - python-serial
    - srecord
before_install:
- cat build.config
#- export X_EMAIL=$(grep -E 'email=(.*)' build.config | cut -c 7-)
#- export X_BRANCH=$(grep -E 'branch=(.*)' build.config | cut -c 8-)
- export X_MODULES=$(grep -E 'modules=(.*)' build.config | cut -c 9-)
#- export X_U8G_FONTS=$(grep -E 'u8g-fonts=(.*)' build.config | cut -c 11-)
#- export X_SSL_ENABLED=$(grep -E 'ssl-enabled=(.*)' build.config | cut -c 13-)
#- export X_DEBUG_ENABLED=$(grep -E 'debug-enabled=(.*)' build.config | cut -c 15-)
# count ',' in the string and add +1
- export X_NUMBER_OF_MODULES=$((`echo $X_MODULES | tr -d -c ',' | wc -m`+1))
- env | grep 'X_'
#- wget -d -v 'http://test.com/hook.php?event=start&recipient='$X_EMAIL
- git clone --depth=50 --branch=master https://github.com/edgiru/esp-ginx.git esp-ginx
- ls -l
# dig in and modify those config files
- cd esp-ginx/app/include

# replace modules in user_modules.h by the selected ones
- bash $TRAVIS_BUILD_DIR/set-modules.sh
# comment the SSL flag in user_config.h if not enabled
#- bash $TRAVIS_BUILD_DIR/set-ssl.sh
# replace fonts in u8g_config.h by the selected ones
#- bash $TRAVIS_BUILD_DIR/set-fonts.sh
# replace version strings in user_version.h
#- bash $TRAVIS_BUILD_DIR/set-version.sh
# set the NODE_DEBUG and COAP_DEBUG flags in user_config.h
#- bash $TRAVIS_BUILD_DIR/set-debug.sh  

- cat user_modules.h
- cat user_config.h
#- cat u8g_config.h
#- cat user_version.h
# back to where we came from
- cd $TRAVIS_BUILD_DIR
- ls -l
install:
- git clone --depth=50 --branch=master https://github.com/pfalcon/esp-open-sdk.git esp-open-sdk
- cd esp-open-sdk
#- ls -l
#- wget https://github.com/nodemcu/nodemcu-firmware/blob/master/tools/esp-open-sdk.tar.gz
#- ls -l
#- tar -zxvf esp-open-sdk.tar.gz
#- ls -l /edgiru/esp-open-sdk/xtensa-lx106-elf/bin
- ls -l
#- ls -l /edgiru/esp-open-sdk/xtensa-lx106-elf
#########################
- wget -O lib/libc.a https://github.com/esp8266/esp8266-wiki/raw/master/libs/libc.a
- wget -O lib/libhal.a https://github.com/esp8266/esp8266-wiki/raw/master/libs/libhal.a
- wget -O include.tgz https://github.com/esp8266/esp8266-wiki/raw/master/include.tgz
- tar -xvzf include.tgz && rm include.tgz
#########################
- export PATH=$PATH:$PWDesp-open-sdk/sdk:$PWDesp-open-sdk/xtensa-lx106-elf/bin
script:
-cd ..
- cd esp-ginx
- ls -altr
- make all

- ls -l

- cd bin/
- timestamp=$(date "+%Y-%m-%d-%H-%M-%S")
- base_file_name="esp-ginx-"$X_BRANCH"-"$X_NUMBER_OF_MODULES"-modules-"$timestamp
- file_name_float=$base_file_name"-float.bin"
- srec_cat  -output ${file_name_float} -binary 0x00000.bin -binary -fill 0xff 0x00000 0x10000 0x10000.bin -binary -offset 0x10000

- ls -l

- cd ../

- ls -l

- make clean
- make EXTRA_CCFLAGS="-DLUA_NUMBER_INTEGRAL"
- cd bin/

- ls -l

- file_name_integer=$base_file_name"-integer.bin"
- srec_cat -output ${file_name_integer} -binary 0x00000.bin -binary -fill 0xff 0x00000 0x10000 0x10000.bin -binary -offset 0x10000

after_success:
- cd $TRAVIS_BUILD_DIR
- pwd
- cp "$TRAVIS_BUILD_DIR/esp-ginx/bin/${file_name_float}" .
- cp "$TRAVIS_BUILD_DIR/esp-ginx/bin/${file_name_integer}" .
- rm -fr "$TRAVIS_BUILD_DIR/esp-ginx"
- ls -al
#- curl -T "{${file_name_float},${file_name_integer}}" -u ${FTP_USER}:${FTP_PASSWORD} --ftp-ssl -k ftp://
#- wget -d -v 'http://test.com/hook.php?event=success&recipient='$X_EMAIL'&branch='$X_BRANCH'&modules='$X_MODULES'&artifacts='${file_name_float},${file_name_integer}

env:
  global:
    secure: ""

notifications:
  email:
    recipients:
      - mail@test.com
    on_success: never
    on_failure: always
  webhooks:
      urls:
#        - http://test.com/hook.php?event=failure&recipient=$X_EMAIL
      on_success: never
      on_failure: always
      on_start: never

branches:
  only:
    - builds
    - master 
